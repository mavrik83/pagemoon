// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  authUid    String?
  email      String?
  firstName  String?
  isAdmin    Boolean?   @default(true)
  lastName   String?
  password   String?
  createdAt  DateTime?  @default(now())
  updatedAt  DateTime?  @updatedAt
  posts      Post[]
  categories Category[]

  @@map("users")
}

model Book {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String?
  author      String?
  isbn        String?
  publisher   String?
  language    String?
  pages       Int?
  readingAge  String?
  gradeLevel  String?
  createdAt   DateTime?  @default(now())
  updatedAt   DateTime?  @updatedAt
  categoryIds String[]   @db.ObjectId
  categories  Category[] @relation(fields: [categoryIds], references: [id])

  @@map("books")
}

model Post {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String?
  description String?
  rawContent  Json?
  readTime    Int?
  draftMode   Boolean?   @default(true)
  createdAt   DateTime?  @default(now())
  updatedAt   DateTime?  @updatedAt
  userId      String?    @db.ObjectId
  user        User?      @relation(fields: [userId], references: [id])
  categoryIds String[]   @db.ObjectId
  categories  Category[] @relation(fields: [categoryIds], references: [id])

  @@map("posts")
}

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  postIds   String[]  @db.ObjectId
  posts     Post[]    @relation(fields: [postIds], references: [id])
  bookIds   String[]  @db.ObjectId
  books     Book[]    @relation(fields: [bookIds], references: [id])
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?   @db.ObjectId

  @@map("categories")
}
